{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["Container","styled","section","List","ul","ListItem","li","ListItemLink","Link","Header","Heading","h1","SansSerifStack","Date","small","Thumbnail","Img","Blog","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","map","post","frontmatter","fields","slug","thumbnail","key","date","to","itemProp","fluid","childImageSharp","pageQuery"],"mappings":"2FAAA,+IAQMA,EAAYC,IAAOC,QAAV,kEAAGD,CAAH,yBAKTE,EAAOF,IAAOG,GAAV,6DAAGH,CAAH,yCAMJI,EAAWJ,IAAOK,GAAV,iEAAGL,CAAH,iCAKRM,EAAeN,YAAOO,QAAV,qEAAGP,CAAH,2BAIZQ,EAASR,IAAOC,QAAV,+DAAGD,CAAH,oEAMNS,EAAUT,IAAOU,GAAV,gEAAGV,CAAH,4BACTW,KAKEC,EAAOZ,IAAOa,MAAV,6DAAGb,CAAH,4BAIJc,EAAYd,YAAOe,KAAV,kEAAGf,CAAH,mBA+CAgB,UA3CF,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAACvB,EAAD,kCAMJ,kBAAC,IAAD,CAAQmB,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAACpB,EAAD,KACGqB,EAAMI,KAAI,SAAAC,GACT,IAAMN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9CC,EAAYJ,EAAKC,YAAYG,UAEnC,OACE,kBAAC5B,EAAD,CAAU6B,IAAKL,EAAKE,OAAOC,MACzB,kBAACvB,EAAD,KACE,kBAACI,EAAD,KAAOgB,EAAKC,YAAYK,MACxB,kBAACzB,EAAD,KACE,kBAACH,EAAD,CAAc6B,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OAC1Cd,KAKNU,GACC,kBAAClB,EAAD,CAAWuB,MAAOL,EAAUM,gBAAgBD,eAYrD,IAAME,EAAS","file":"component---src-pages-blog-js-d6e46adb34329b403a1d.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { SansSerifStack } from \"../components/layout\"\n\nconst Container = styled.section`\n  padding: 0;\n  margin: 0;\n`\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`\n\nconst ListItem = styled.li`\n  padding: 0 0 3em 0;\n  margin: 0;\n`\n\nconst ListItemLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst Header = styled.section`\n  display: grid;\n  grid-template-columns: 10% 75%;\n  align-items: center;\n`\n\nconst Heading = styled.h1`\n  ${SansSerifStack};\n  padding: 0;\n  margin: 0;\n`\n\nconst Date = styled.small`\n  font-family: monospace;\n`\n\nconst Thumbnail = styled(Img)`\n  margin: 2em 0;\n`\n\nconst Blog = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Container>No blog posts to display</Container>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <List>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const thumbnail = post.frontmatter.thumbnail\n\n          return (\n            <ListItem key={post.fields.slug}>\n              <Header>\n                <Date>{post.frontmatter.date}</Date>\n                <Heading>\n                  <ListItemLink to={post.fields.slug} itemProp=\"url\">\n                    {title}\n                  </ListItemLink>\n                </Heading>\n              </Header>\n\n              {thumbnail && (\n                <Thumbnail fluid={thumbnail.childImageSharp.fluid} />\n              )}\n            </ListItem>\n          )\n        })}\n      </List>\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"blog\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD MMM YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}